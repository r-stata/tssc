d 'MOREMATA': module (Mata) to provide various functions
d
d  This package includes various Mata functions. kern(): various
d kernel functions; kint(): kernel integral functions; kdel0():
d canonical bandwidth of kernel; quantile(): quantile function;
d median(): median; iqrange(): inter-quartile range; ecdf():
d cumulative distribution function; relrank(): grade
d transformation; ranks(): ranks/cumulative frequencies; freq():
d compute frequency counts; histogram(): produce histogram data;
d mgof(): multinomial goodness-of-fit tests; collapse(): summary
d statistics by subgroups; _collapse(): summary statistics by
d subgroups; gini(): Gini coefficient; sample(): draw random
d sample; srswr(): SRS with replacement; srswor(): SRS without
d replacement; upswr(): UPS with replacement; upswor(): UPS without
d replacement; bs(): bootstrap estimation; bs2(): bootstrap
d estimation; bs_report(): report bootstrap results; jk():
d jackknife estimation; jk_report(): report jackknife results;
"d subset(): obtain subsets, one at a time; composition(): obtain"
"d compositions, one by one; ncompositions(): determine number of"
"d compositions; partition(): obtain partitions, one at a time;"
d npartitionss(): determine number of partitions; rsubset(): draw
d random subset; rcomposition(): draw random composition; greedy():
d one-to-one and one-to-many matching; ebal(): entropy balancing
"d (Stata 11 required); colvar(): variance, by column; meancolvar():"
"d mean and variance, by column; variance0(): population variance;"
d meanvariance0(): mean and population variance; mse(): mean
"d squared error; colmse(): mean squared error, by column; sse():"
"d sum of squared errors; colsse(): sum of squared errors, by"
d column; benford(): Benford distribution; cauchy(): cumulative
d Cauchy-Lorentz dist.; cauchyden(): Cauchy-Lorentz density;
d cauchytail(): reverse cumulative Cauchy-Lorentz; invcauchy():
d inverse cumulative Cauchy-Lorentz; rbinomial(): generate binomial
d random numbers; cebinomial(): cond. expect. of binomial r.v.;
d root(): Brent's univariate zero finder; nrroot(): Newton-Raphson
d zero finder; finvert(): univariate function inverter;
d integrate_sr(): univariate function integration (Simpson's rule);
d integrate_38(): univariate function integration (Simpson's 3/8
d rule); ipolate(): linear interpolation; polint(): polynomial
d inter-/extrapolation; sqrt(): square root of a symmetric positive
d definite matrix; plot(): Draw twoway plot; _plot(): Draw twoway
d plot; panels(): identify nested panel structure; _panels():
d identify panel sizes; npanels(): identify number of panels;
d nunique(): count number of distinct values; nuniqrows(): count
d number of unique rows; isconstant(): whether matrix is constant;
d nobs(): number of observations; colrunsum(): running sum of each
d column; linbin(): linear binning; fastlinbin(): fast linear
d binning; exactbin(): exact binning; makegrid(): equally spaced
d grid points; cut(): categorize data vector; posof(): find element
d in vector; which(): positions of nonzero elements; locate():
d search an ordered vector; hunt(): consecutive search; cond():
d matrix conditional operator; expand(): duplicate single
d rows/columns; _expand(): duplicate rows/columns in place;
d repeat(): duplicate contents as a whole; _repeat(): duplicate
d contents in place; unorder2(): stable version of unorder();
d jumble2(): stable version of jumble(); _jumble2(): stable version
d of _jumble(); pieces(): break string into pieces; npieces():
d count number of pieces; _npieces(): count number of pieces;
d regexr(): regular expression replace; invtokens(): reverse of
d tokens(); realofstr(): convert string into real; strexpand():
d expand string argument; matlist(): display a (real) matrix;
d insheet(): read spreadsheet file; infile(): read free-format
d file; outsheet(): write spreadsheet file; callf(): pass optional
d args to function; callf_setup(): setup for mm_callf().
d
d KW: Mata
d KW:  quantile
d KW: median
d KW: inter-quartile range
d KW: integration
d KW: cumulative distribution
d KW: Cauchy distribution
d KW: Cauchy-Lorentz distribution
d KW: relative ranks
d KW: running sum
d KW: linear interpolation
d KW: insheet
d KW: infile
d KW: outsheet
d KW: spreadsheet
d KW: tokens
d KW: rowvector
d KW: string
d KW: real
d KW: grid
d KW: linear binning
d KW: histogram
d
d Requires: Stata version 9
d
d Distribution-Date: 20190821
d
"d Author: Ben Jann, University of Bern"
d Support: email jann@@soz.unibe.ch
d
f moremata.zip
f ./l/lmoremata.mlib
f ./l/lmoremata10.mlib
f ./l/lmoremata11.mlib
f ./l/lmoremata14.mlib
f mf_mm_sample.hlp
f moremata.hlp
f moremata_source.hlp
f moremata10_source.hlp
f moremata11_source.hlp
f moremata14_source.hlp
f mf_mm_unorder2.hlp
f mf_mm_panels.hlp
f mf_mm_quantile.hlp
f mf_mm_strexpand.hlp
f mf_mm_realofstr.hlp
f mf_mm_posof.hlp
f mf_mm_ipolate.hlp
f mf_mm_invtokens.hlp
f mf_mm_linbin.hlp
f mf_mm_histogram.hlp
f mf_mm_ecdf.hlp
f mf_mm_colrunsum.hlp
f mf_mm_rbinomial.hlp
f mf_mm_insheet.hlp
f mf_mm_cut.hlp
f mf_mm_freq.hlp
f mf_mm_colvar.hlp
f mf_mm_gini.hlp
f mf_mm_nunique.hlp
f mf_mm_bs.hlp
f mf_mm_callf.hlp
f mf_mm_expand.hlp
f mf_mm_finvert.hlp
f mf_mm_greedy.hlp
f mf_mm_jk.hlp
f mf_mm_kern.hlp
f mf_mm_locate.hlp
f mf_mm_nobs.hlp
f mf_mm_nrroot.hlp
f mf_mm_polint.hlp
f mf_mm_root.hlp
f mf_mm_which.hlp
f mf_mm_plot.hlp
f mf_mm_pieces.hlp
f mf_mm_benford.hlp
f mf_mm_isconstant.hlp
f mf_mm_mgof.hlp
f mf_mm_subset.hlp
f mf_mm_cauchy.hlp
f mf_mm_matlist.hlp
f mf_mm_cond.hlp
f mf_mm_collapse.hlp
f mf_mm_integrate.hlp
f mf_mm_regexr.hlp
f mf_mm_sqrt.hlp
f mf_mm_ebal.sthlp
