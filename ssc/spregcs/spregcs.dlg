/*
 spregcs
*! VERSION 1.0 25/01/2016
*/
VERSION 11.0
INCLUDE _std_xlarge
DEFINE _dlght 425
INCLUDE header
HELP hlp1, view("help spregcs")
RESET res1

SCRIPT PREINIT
BEGIN
program parseMessage
script se_createAsSvyOLS
script se_setBias_on
program svy_check_title
END

PROGRAM parseMessage
BEGIN
if __MESSAGE.contains("__MI__") {
call script se_setMI_on
}
END

SCRIPT POSTINIT
BEGIN
program check_bytab
program se_setFinalInitState
END

PROGRAM check_bytab
BEGIN
if ! __MESSAGE.contains("__MI__") {
call script sub_set_by_on
}
END

SCRIPT svy_is_on
BEGIN
	script max_setDefaultNoLog
END
SCRIPT svy_is_off
BEGIN
	script max_setDefaultLog
END

DIALOG main, label("spregCS- Spatial Cross Sections Econometric Regression Models: Stata Module Toolkit") ///
	tabtitle("Main")
BEGIN
 DEFINE wlabel 130
 DEFINE cmdx 320
 DEFINE cmdw 170
 DEFINE _x _xsetbu
 DEFINE _y _top

 TEXT tx_cmd1   _lft      _top      100      .,	///
	label("Model:")
 TEXT tx_fn1	130	@  	400 	.,	///
 label("Weight Matrix File Name (dta):") 

  COMBOBOX cb_cmd1  _lft  _ss     100        .,	///
	label("Model")				///
	contents(cmd1_con )		///
	value(cmd11_con) option(model)	///
	onselchangelist(cmd1_sel ) dropdownlist

 FILE fi_fn1   130     @  	400 	.,	///
 label("Brows...")				///
 option("wmfile")				///
 filter("Stata dta File (*.dta)|*.dta|All (*.*)|*.*") ///
 defext(dta)

 GROUPBOX gb_group1   _lft     _ss       _iwd     _ht9 , 
  TEXT     tx_yvar     _ilft   +15    _vnwd     .,	/*
		*/ label("Dependent Variable:")		/*
		*/
  TEXT     tx_xvar     _vlx      @      _cwd2     .,	/*
		*/ label("Independent Variables:")	/*
		*/
  VARNAME  vn_yvar     _ilft       _ss       _vnwd   .,	/*
		*/ label("Dependent Variable")		/*
		*/
  VARLIST  vl_xvar     _vlx       @         380      .,	/*
		*/ label("Independent Variables")

  TEXT     tx_vary2  _ilft   _ls   170      .,	///
		label("Endogenous Variables (GS2SLS)")
  TEXT     tx_varz2  200    @     250      .,	///
		label("Instrumental Variables (GS2SLS):")
  VARLIST  vl_vary2  _ilft   _ss   170      .,	///
		label("Endogenous Variables (GS2SLS)")	///
		option(endog)
  VARLIST  vl_varz2  200    @     330      .,	///
		label("Instrumental Variables (GS2SLS)")	///
		option(inst)

 VARLIST vl_aux _ilft   _xxls   350    ., ///
	label("Auxiliary Variables") ///
	option(aux)
 TEXT tx_aux    380   @    160   .,	///
	label("Auxiliary Variables")
 VARLIST vl_mhet _ilft	_ls	350 .,	///
	label("Heteroscedasticity Variables") ///
	option(mhet)
 TEXT tx_mhet	380 	@ 	160 .,	///
	label("Heteroscedasticity Variables")

 VARLIST vl_vhet _ilft	_ls	350 .,	///
	label("Frontier Error Variance Variables") ///
	option(vhet)
 TEXT tx_vhet	380 	@ 	160 .,	///
	label("Frontier Error Variance Variables")

 VARLIST vl_varq _ilft	_ls	350 .,	///
	label("Eq2 Variables (GS3SLS)") ///
	option(var2)
 TEXT tx_varq	380 	@ 	160 .,	///
	label("EQ2 Variables (GS3SLS)")
*/	

  CHECKBOX ck_optdst  _lft    _ls   _iwd    _ht1 , 	///
	groupbox					///
	onclickon(script ck_dist_on)			///
	onclickoff(script ck_dist_off)		///
	label("Distribution:")
  RADIO rb_norm	_ilft   _ss     100  ., /*
	*/ label("Normal")	 /*
	*/ first			/*
	*/ option("dist(norm)")		/*
*/
  RADIO rb_exp   100  @	100	., /*
	*/ label("Exponential") /*
	*/ option("dist(exp)")		/*
*/
  RADIO rb_weib	200	@	100 .,	/*
	*/ label("Weibull") /*
	*/ option("dist(weib)")		/*
*/
  RADIO rb_hn	300	@	100 .,	/*
	*/ label("Half-Normal") /*
	*/ option("dist(hn)")		/*
*/
  RADIO rb_tn	400	@	110 .,	/*
	*/ label("Truncated-Normal") /*
	*/ last				/*
	*/ option("dist(tn)")		/*
*/
  CHECKBOX ck_mfx  _lft    _ls   _iwd    _ht2 , 	///
	groupbox					///
	onclickon(script ck_mfx_on)			///
	onclickoff(script ck_mfx_off)		///
label("Spatial Autocorrelation Coef. Type:   " " " " " " Total, Direct, and Indirect Marginal Effects - Elasticities:")

 RADIO rb_sprho	_ilft  _ss  80  ., /*
	*/ label("Rho")	 /*
	*/ first			/*
	*/ option("spar(rho)")		/*
*/
DEFINE y @y
 RADIO rb_splam	100   y  @ .,	/*
	*/ label("Lambda") /*
	*/ clickon(program main_gmm_on)	/*
	*/ last				/*
	*/ option("spar(lam)")		/*
*/	
 RADIO rb_lin	230   y  100  ., /*
	*/ label("Linear")	 /*
	*/ first			/*
	*/ option("mfx(lin)")		/*
*/
 RADIO rb_log	300   y  @ .,	/*
	*/ label("Log-Log") /*
	*/ last				/*
	*/ option("mfx(log)")		/*
*/	
  CHECKBOX ck_tolog    390   y 120 ., option("tolog") /*
*/ label("Log Transform Varlist") /*
*/
END

DIALOG est1 , tabtitle("Options")
BEGIN
  CHECKBOX ck_model11  _lft    _top   _ibwd    _ht20 , ///
	groupbox				 ///
	onclickon(script ck_model11_on)		 ///
	onclickoff(script ck_model11_off)	 ///
	label("Tests:")
 CHECKBOX ck_tests    _ilft  _ss   350  ., option("tests") /*
*/ label("Display ALL Tests") 
 CHECKBOX ck_lmspac    _ilft  _ss   350  ., option("lmspac") /*
*/ label("Spatial Autocorrelation Tests") 
 CHECKBOX ck_diag   @  _ss  @  ., option("diag") /*
*/ label("Model Selection Diagnostic Criteria") 
 CHECKBOX ck_lmhet    _ilft  _ss   350  ., option("lmhet") /*
*/ label("Heteroscedasticity Tests") 
 CHECKBOX ck_lmnorm    _ilft  _ss   350  ., option("lmnorm") /*
*/ label("Non Normality Tests") 
 CHECKBOX ck_hausman    _ilft  _ss   350  ., option("hausman") /*
*/ label("Hausman Specification OLS/IV-2SLS Test") 
 CHECKBOX ck_lmiden    _ilft  _ss   350  ., option("lmiden") /*
*/ label("Identification Restrictions Tests") 
 CHECKBOX ck_reset    _ilft  _ss   350  ., option("reset") /*
*/ label("REgression Specification Error Tests (RESET)") 
 CHECKBOX ck_lmform _ilft  _ss 350  ., option("lmform") /*
*/ label("Linear vs Log-Linear Functional Form Tests")
 CHECKBOX ck_lmcl _ilft  _ss 350  ., option("lmcl") /*
*/ label("Multicollinearity Diagnostic Tests") 

  CHECKBOX ck_model12  _lft    _xls   _ibwd    _ht14 , ///
	groupbox				 ///
	onclickon(script ck_model12_on)		 ///
	onclickoff(script ck_model12_off)	 ///
	label("Options:")
 CHECKBOX ck_coll _ilft     _ss    400 ., option("coll") /*
*/ label("coll: Keep Collinear Variables")
 CHECKBOX ck_first _ilft  _ss 400  ., option("first") /*
*/ label("first: Display First Stage Regression")
 CHECKBOX ck_robust _ilft  _ss   350  ., option("robust") /*
*/ label("robust: Use Huber-White Variance-Covariance Matrix") 
 CHECKBOX ck_nocons _ilft  _ss 400  ., option("noconstant") /*
*/ label("noconstant: No Constant in RHS Equation only")
 CHECKBOX ck_nocong _ilft  _ss 400  ., option("noconexog") /*
*/ label("noconexog: No Constant in RHS and Instrumental Equations")
 CHECKBOX ck_twostep _ilft  _ss   300  ., option("twostep") /*
*/ label("twostep: Use Newey Two-Step Estimator; default is MLE") 
 CHECKBOX ck_dn   @  _ss  @  ., option("dn") /*
*/ label("Use (N) divisor instead of (N-K) for DF") 
*/
END

DIALOG est2, tabtitle("Model1")
BEGIN
  CHECKBOX ck_model2  _lft    _top   _ibwd    _ht12 , 	///
	groupbox					///
	onclickon(script ck_model21_on)			///
	onclickoff(script ck_model21_off)		///
	label("GS2SLS Model Options:")
  RADIO rb_m1		_indent	_ss	_inwd	.,	///
	first						///
	option(run(2sls))				///
	label("Two-Stage Least Squares (2SLS)")		///
	onclickon(script ck_gmms_off)
  RADIO rb_m2		@	_ss	@	.,	///
	option(run(liml))				///
	label("Limited Information Maximum Likelihood (LIML)") ///
	onclickon(script ck_gmms_off)
  RADIO rb_m3		@	_ss	@	.,	///
	option(run(melo))				///
	label("Minimum Expected Loss (MELO)")	///
	onclickon(script ck_gmms_off)
  RADIO rb_m4	@	_ss	@	.,	///
	option(run(fuller))			///
	label("Fuller k - Class LIML")	///
	onclickon(script fuller_on)

  EDIT ed_fuller  170           @    70   ., 	/*
	*/ label("fuller")			/*
	*/ option("kf")
  TEXT     tx_fuler   250        @  70    .,	/*
	*/ label("k-Class Value")  		/*
*/
  RADIO rb_m5	_ilft	_ms	_iwd	.,	///
	option(run(kclass))			///
	label("Theil k - Class LIML")	///
 	onclickon(script kclass_on)
 EDIT ed_kclass  170   @    70   ., 	/*
	*/ label("kclass")			/*
	*/ option("kc")
  TEXT     tx_kclass 250  @  100    .,	/*
	*/ label("k-Class Value")  	/*
*/
  RADIO rb_m6	_ilft	_ss	_iwd	.,	///
	last						///
	option(run(gmm))					///
	label("Generalized Method of Moments (GMM)")	///
	onclickon(script ck_gmms_on)

 GROUPBOX gb_optgmm	_lft	_ls	_ibwd	_ht9 ,	///
	label("GMM - Generalized Method of Moments Options:")
  RADIO    rb_g0  _ilft           _ss        300    ., 	/*
	*/ label("White Method") /*
	*/ first				/*
	*/ option("hetcov(white)")			/*
*/
DEFINE y @y
  RADIO    rb_g1   _ilft           _ss        300    .,	/*
	*/ label("Bartlet Method") /*
	*/ option("hetcov(bart)")			/*
*/
  RADIO    rb_g2   _ilft           _ss        300   .,	/*
	*/ label("Daniell Method")	/*
	*/ option("hetcov(dan)")			/*
*/
  RADIO    rb_g3   _ilft           _ss        300    .,	/*
	*/ label("Newey-West Method")		/*
	*/ option("hetcov(nwest)")			/*
*/
  RADIO    rb_g4   _ilft           _ss        300    .,	/*
	*/ label("Parzen Method")	/*
	*/ option("hetcov(parzen)")			/*
*/
  RADIO    rb_g5   _ilft2           y        300    .,	/*
	*/ label("Quadratic spectral Method")	/*
	*/ option("hetcov(quad)")			/*
*/
  RADIO    rb_g6   @           _ss        300    .,	/*
	*/ label("Tent Method")	/*
	*/ option("hetcov(tent)")			/*
*/
  RADIO    rb_g7   @           _ss        300    .,	/*
	*/ label("Truncated Method")	/*
	*/ option("hetcov(trunc)")			/*
*/
  RADIO    rb_g8   @           _ss        300    .,	/*
	*/ label("Tukey-Hamming Method")	/*
	*/ option("hetcov(tukeym)")			/*
*/
  RADIO    rb_g9   @           _ss        300    .,	/*
	*/ label("Tukey-Hanning Method")	/*
	*/ last					/*
	*/ option("hetcov(tukeyn)") /*
*/
  CHECKBOX ck_model22  _lft  _ls   _ibwd     _ht9 ,	///
	groupbox						///
	onclickon(script ck_model22_on)				///
	onclickoff(script ck_model22_off)			///
	label("GS3SLS Model Options:")
  RADIO    rb_3sls     _ilft       _ss       _ibwd       .,	///
	label("Three-Stage Least Squares [3SLS]")		///
	first							///
	option(NONE)
  RADIO    rb_2sls     @           _ss       @           .,	///
	label("Two-Stage Least Squares [2SLS]")			///
	option("2sls")
  RADIO    rb_ols      _ilft       _ss       @           .,	///
	label("Ordinary Least Squares [OLS]")			///
	option("ols")
  RADIO    rb_sure     @           _ss       @           .,	///
	label("Seemingly Unrelated Regression [SURE]")		///
	option("sure")
  RADIO    rb_mvreg    @           _ss       @           .,	///
	last							///
	option("mvreg")						///
	label("SURE with OLS Degree-of-Freedom Adjustment [MVReg]")
*/
END

DIALOG est3 , tabtitle("Model2")
BEGIN

 CHECKBOX ck_rest       _ilft     _top    _ckwd  ., 	/*
	*/ clickon("gaction est3.ed_rest.enable")	/*
	*/ clickoff("gaction est3.ed_rest.disable")		
 EDIT ed_rest     _cksep        @    _spwd   ., /*
	*/ label("Restrictions Range")	/*
	*/ option("rest")
 TEXT     tx_rest     _spsep        @  _rbsprb    ., /*
	*/ label("Restrictions Range")









 CHECKBOX ck_model3 _lft _ls _ibwd    _ht15 , 	///
 groupbox					///
 onclickon(script ck_model31_on)		///
 onclickoff(script ck_model31_off)		///
 label("Additional Options:")
 TEXT tx_predict _ilft    _ss    150 .,	///
	label("Predicted Variable")
 TEXT tx_resid   200      @      150 .,	///
	label("Residuals Variable")
 VARNAME vn_predict _ilft _ss   150  .,	///
	label("predict") 		///
	option(predict)
 VARNAME vn_resid  200   @     150  .,	///
	label("resid") 			///
	option(resid)

  EDIT ed_grids  _ilft       _ls    50   ., 	/*
	*/ label("gridsearch")				/*
	*/ option("grids")
  TEXT     tx_grids     80    @  250    .,	/*
	*/ label("Grid Search Initial Values (SARARML)")
  EDIT ed_impower  _ilft        _ls    50   ., 	/*
	*/ label("impower")			/*
	*/ option("impower")
  TEXT     tx_impower     80     @  250    .,	/*
	*/ label("Impower Initial Values (SARARGS / SARARIV)")

 CHECKBOX ck_tobit _ilft  _ls  @ ., option("tobit") /*
*/ label("tobit: Use Tobit Regression")
  EDIT ed_llt  _ilft       _ms    50   ., 	/*
	*/ label("llt")				/*
	*/ option("ll")
  TEXT     tx_llt     80    @  250    .,	/*
	*/ label("ll: Minimum Left-Censoring Dependent Variable Value")

 CHECKBOX ck_hetero _ilft  _ls   450  ., option("het") /*
*/ label("Use Heterockedasticy Model (SARARML/SARARGS/SARARIV), default Homoscedasticity") 
*/
  CHECKBOX ck_lagw  _lft    _xls   _ibwd    _ht3 , 	///
	groupbox					///
	onclickon(script ck_lagw_on)			///
	onclickoff(script ck_lagw_off)		///
label("Initial Values:")
  CHECKBOX ck_inrho   _ilft    _ls    70    ., /*
	*/ clickon("gaction est3.sp_inrho.enable") /*
	*/ clickoff("gaction est3.sp_inrho.disable")
  SPINNER  sp_inrho   _cksep        @    40  .,	/*
	*/ min(0) max(1) default(0.1)		/*
	*/ option("inrho")			/*
	*/ label("inrho")
  TEXT     tx_inrho   95    @     _sprb  .,	/*
	*/ label("Rho")

  CHECKBOX ck_inlam   130   @    20  ., 	/*
	*/ clickon("gaction est3.sp_inlam.enable") /*
	*/ clickoff("gaction est3.sp_inlam.disable")		
  SPINNER  sp_inlam   _cksep        @    40  .,	/*
	*/ min(0) max(1) default(0.1)		/*
	*/ option("inlambda")			/*
	*/ label("inlambda")
  TEXT     tx_inlam   200    @     _sprb  .,	/*
	*/ label("Lambda")

  CHECKBOX ck_ord  260     @      70    ., 	/*
	*/ clickon("gaction est3.sp_ord.enable") /*
	*/ clickoff("gaction est3.sp_ord.disable")		
  SPINNER  sp_ord   _cksep        @    40  .,	/*
	*/ min(1) max(4) default(1)		/*
	*/ option("order")			/*
	*/ label("Order")
  TEXT     tx_ord   330   @      _sprb  .,	/*
	*/ label("Order")

  CHECKBOX ck_nw   380   @    70  ., 	/*
	*/ clickon("gaction est3.sp_nw.enable")	/*
	*/ clickoff("gaction est3.sp_nw.disable")
  SPINNER  sp_nw   _cksep        @    40  .,	/*
	*/ min(1) max(4) default(1)		/*
	*/ option("nwmat")			/*
	*/ label("nwmat")
  TEXT     tx_nw   450    @      _sprb  .,	/*
	*/ label("nwmat") /*
*/

  CHECKBOX ck_model0 _lft    _xls   _ibwd    _ht5 , ///
	groupbox				 ///
	onclickon(script ck_model0_on)		 ///
	onclickoff(script ck_model0_off)	 ///
	label("Standardized Weight Matrix Type:")
  RADIO    rb_ws1  _ilft     _ss     300    ., 	/*
	*/ label("Standardized Weight Matrix - (W)") /*
	*/ first			/*
	*/ option("stand")		/*
*/
  RADIO    rb_ws2  _ilft     _ss     300    ., 	/*
	*/ label("Inverse Standardized Weight Matrix - (1/W)") /*
	*/ option("stand inv")		/*
*/
  RADIO    rb_ws3  _ilft     _ss     300    ., 	/*
	*/ label("Inverse Squared Standardized Weight Matrix - (1/W^2)") /*
	*/ last					/*
	*/ option("stand inv2")			/*
*/

END

DIALOG est4, tabtitle("Ridge/Weight")
BEGIN
  CHECKBOX ck_ridgero  _lft    _top   _ibwd    _ht8 , ///
	groupbox				 ///
	onclickon(script ck_ridger_on)		 ///
	onclickoff(script ck_ridger_off)	 ///
	label("Ridge Regression Panel Data:")
  RADIO rb_orr	_ilft   _ss     _iwd	.,	///
	option("ridge(orr)")			///
	first			 ///
	label("ORR - Ordinary Ridge Regression") ///
	onclickon(script kridge_on)
  EDIT ed_ridge  250   @    70   ., 	/*
	*/ label("Ridge Value")		/*
	*/ option("kr")
  TEXT tx_ridge 330  @  100    .,	/*
	*/ label("Ridge Value")  	/*
*/
  RADIO rb_grr1   _ilft  _ss	300	., /*
	*/ label("GRR1 - Generalized Ridge Regression") /*
	*/ onclickon(script kridge_off)	 /*
	*/ option("ridge(grr1)")		/*
*/
  RADIO rb_grr2	_ilft	_ss	300 .,	/*
	*/ label("GRR2 - Iterative Generalized Ridge Regression") /*
	*/ onclickon(script kridge_off)	 /*
	*/ option("ridge(grr2)")		/*
*/
  RADIO rb_grr3	_ilft	_ss	300 .,	/*
	*/ label("GRR3 - Adaptive Generalized Ridge Regression") /*
	*/ onclickon(script kridge_off)	 /*
	*/ last				 /*
	*/ option("ridge(grr3)")		/*
*/
  CHECKBOX ck_model41 _lft    _xls   _ibwd    _ht22 , ///
	groupbox				 ///
	onclickon(script ck_model41_on)		 ///
	onclickoff(script ck_model41_off)	 ///
	label("Weighted Variable Type:")
  TEXT tx_wv 		_ilft	_ss    140  	., ///
	label("Weighted Variable (X)")
  VARNAME vn_wv		_ilft 	_ss  	140	., ///
	ts					 ///
	label("Weighted Variable")		 ///
	option("wvar")
  RADIO    rb_w1  _ilft     _ls     300    ., 	/*
  	*/ onclickon(script vn_off)	 /*
	*/ label("Yh - Predicted Value (Default)") /*
	*/ first			/*
	*/ option("weights(yh)")		/*
*/
  RADIO    rb_w2  _ilft     _ss     300    ., 	/*
  	*/ onclickon(script vn_off)	 /*
	*/ label("Yh^2 - Predicted Value Squared") /*
	*/ option("weights(yh2)")		/*
*/
  RADIO    rb_w3  _ilft     _ss     300    ., 	/*
  	*/ onclickon(script vn_off)	 /*
	*/ label("abs(E) - Residual Absolute Value") /*
	*/ option("weights(abse)")		/*
*/
  RADIO    rb_w4  _ilft     _ss     300    ., 	/*
  	*/ onclickon(script vn_off)	 /*
	*/ label("E^2 - Residual Squared") /*
	*/ option("weights(e2)")		/*
*/
  RADIO    rb_w5  _ilft     _ls     300    ., 	/*
  	*/ onclickon(script vn_on)	 /*
	*/ label("(X) Variable") /*
	*/ option("weights(x)")			/*
*/
  RADIO    rb_w6  _ilft     _ss     300    ., 	/*
  	*/ onclickon(script vn_on)	 /*
	*/ label("(1/X) Inverse Variable") /*
	*/ option("weights(xi)")		/*
*/
  RADIO    rb_w7  _ilft     _ss     300    ., 	/*
  	*/ onclickon(script vn_on)	 /*
	*/ label("(X^2) Squared Variable") /*
	*/ option("weights(x2)")		/*
*/
  RADIO    rb_w8  _ilft     _ss     300    ., 	/*
  	*/ onclickon(script vn_on)	 /*
	*/ label("(1/X^2) Inverse Squared Variable") /*
	*/ last					/*
	*/ option("weights(xi2)")		/*
*/
END

LIST cmd1_con
BEGIN
sar
sem
sdm
sac
--------------
mstar
mstard
--------------
ivtobit
--------------
sararml
spgmm
--------------
sarargs
sarariv
gs2sls
gs2slsar
--------------
gs3sls
gs3slsar
--------------
gwr
ols
lag
durbin
--------------
END

LIST cmd11_sel
BEGIN
sar
sem
sdm
sac
mstar
mstard
ivtobit
sararml
spgmm
sarargs
sarariv
gs2sls
gs2slsar
gs3sls
gs3slsar
gwr
ols
lag
durbin
END

SCRIPT ck_dist_on
BEGIN
 main.rb_norm.enable
 main.rb_exp.enable
 main.rb_weib.enable
 main.rb_hn.enable
 main.rb_tn.enable
END

SCRIPT ck_dist_off
BEGIN
 main.rb_norm.disable
 main.rb_exp.disable
 main.rb_weib.disable
 main.rb_hn.disable
 main.rb_tn.disable
END

SCRIPT ck_mfx_on
BEGIN
 main.rb_sprho.enable
 main.rb_splam.enable
 main.rb_lin.enable
 main.rb_log.enable
END
SCRIPT ck_mfx_off
BEGIN
 main.rb_sprho.disable
 main.rb_splam.disable
 main.rb_lin.disable
 main.rb_log.disable
END

SCRIPT ck_model0_on
BEGIN
 est3.rb_ws1.enable
 est3.rb_ws2.enable
 est3.rb_ws3.enable
END

SCRIPT ck_model0_off
BEGIN
 est3.rb_ws1.disable
 est3.rb_ws2.disable
 est3.rb_ws3.disable
END

SCRIPT ck_model11_on
BEGIN
 est1.ck_tests.enable
 est1.ck_lmspac.enable
 est1.ck_lmhet.enable
 est1.ck_lmnorm.enable
 est1.ck_lmform.enable
 est1.ck_lmcl.enable
 est1.ck_reset.enable
 est1.ck_diag.enable
 est1.ck_lmiden.enable
 est1.ck_hausman.enable
END

SCRIPT ck_model11_off
BEGIN
 est1.ck_lmspac.disable
 est1.ck_lmhet.disable
 est1.ck_lmnorm.disable
 est1.ck_lmform.disable
 est1.ck_lmcl.disable
 est1.ck_reset.disable
 est1.ck_diag.disable
 est1.ck_lmiden.disable
 est1.ck_hausman.disable
 est1.ck_tests.disable
END

SCRIPT ck_model12_on
BEGIN
 est1.ck_coll.enable
 est1.ck_first.enable
 est1.ck_robust.enable
 est1.ck_nocons.enable
 est1.ck_nocong.enable
 est1.ck_twostep.enable
 est1.ck_dn.enable
END

SCRIPT ck_model12_off
BEGIN
 est1.ck_coll.disable
 est1.ck_first.disable
 est1.ck_robust.disable
 est1.ck_nocons.disable
 est1.ck_nocong.disable
 est1.ck_twostep.disable
 est1.ck_dn.disable
END

SCRIPT ck_model21_on
BEGIN
 est2.rb_m1.enable
 est2.rb_m2.enable
 est2.rb_m3.enable
 est2.rb_m4.enable
 est2.rb_m5.enable
 est2.rb_m6.enable
END

SCRIPT ck_model21_off
BEGIN
 est2.rb_m1.disable
 est2.rb_m2.disable
 est2.rb_m3.disable
 est2.rb_m4.disable
 est2.rb_m5.disable
 est2.rb_m6.disable
END

SCRIPT ck_rest_on
BEGIN
 est3.ed_rest.enable
END
SCRIPT ck_rest_off
BEGIN
 est3.ed_rest.disable
END

SCRIPT fuller_on
BEGIN
 est2.ed_fuller.enable
 est2.ed_kclass.disable
END

SCRIPT fuller_off
BEGIN
 est2.ed_fuller.disable
 est2.ed_kclass.disable
END

SCRIPT kclass_on
BEGIN
 est2.ed_fuller.disable
 est2.ed_kclass.enable
END

SCRIPT kclass_off
BEGIN
 est2.ed_fuller.disable
 est2.ed_kclass.disable
END

SCRIPT ck_gmms_on
BEGIN
 est2.rb_g0.enable
 est2.rb_g1.enable
 est2.rb_g2.enable
 est2.rb_g3.enable
 est2.rb_g4.enable
 est2.rb_g5.enable
 est2.rb_g6.enable
 est2.rb_g7.enable
 est2.rb_g8.enable
 est2.rb_g9.enable
END

SCRIPT ck_gmms_off
BEGIN
 est2.rb_g0.disable
 est2.rb_g1.disable
 est2.rb_g2.disable
 est2.rb_g3.disable
 est2.rb_g4.disable
 est2.rb_g5.disable
 est2.rb_g6.disable
 est2.rb_g7.disable
 est2.rb_g8.disable
 est2.rb_g9.disable
END

SCRIPT ck_model22_on
BEGIN
 est2.rb_3sls.enable
 est2.rb_2sls.enable
 est2.rb_sure.enable
 est2.rb_mvreg.enable
 est2.rb_ols.enable
END

SCRIPT ck_model22_off
BEGIN
 est2.rb_3sls.disable
 est2.rb_2sls.disable
 est2.rb_sure.disable
 est2.rb_mvreg.disable
 est2.rb_ols.disable
END

SCRIPT ck_model31_on
BEGIN
 est3.vn_predict.enable
 est3.vn_resid.enable
 est3.ed_grids.enable
 est3.ed_impower.enable
 est3.ck_tobit.enable
 est3.ed_llt.enable
 est3.ck_hetero.enable
END

SCRIPT ck_model31_off
BEGIN
 est3.vn_predict.disable
 est3.vn_resid.disable
 est3.ed_grids.disable
 est3.ed_impower.disable
 est3.ck_tobit.disable
 est3.ed_llt.disable
 est3.ck_hetero.disable
END

SCRIPT ck_lagw_on
BEGIN
 est3.sp_inrho.enable
 est3.sp_inlam.enable
 est3.sp_ord.enable
 est3.sp_nw.enable
END

SCRIPT ck_lagw_off
BEGIN
 est3.sp_inrho.disable
 est3.sp_inlam.disable
 est3.sp_ord.disable
 est3.sp_nw.disable
END

SCRIPT ck_model41_on
BEGIN
 est4.rb_w1.enable
 est4.rb_w2.enable
 est4.rb_w3.enable
 est4.rb_w4.enable
 est4.rb_w5.enable
 est4.rb_w6.enable
 est4.rb_w7.enable
 est4.rb_w8.enable
 est4.vn_wv.enable
END

SCRIPT ck_model41_off
BEGIN
 est4.rb_w1.disable
 est4.rb_w2.disable
 est4.rb_w3.disable
 est4.rb_w4.disable
 est4.rb_w5.disable
 est4.rb_w6.disable
 est4.rb_w7.disable
 est4.rb_w8.disable
 est4.vn_wv.disable
END

SCRIPT kridge_on
BEGIN
 est4.ed_ridge.enable
END

SCRIPT kridge_off
BEGIN
 est4.ed_ridge.disable
END

SCRIPT ck_ridger_on
BEGIN
 est4.rb_orr.enable
 est4.rb_grr1.enable
 est4.rb_grr2.enable
 est4.rb_grr3.enable
END

SCRIPT ck_ridger_off
BEGIN
 est4.rb_orr.disable
 est4.rb_grr1.disable
 est4.rb_grr2.disable
 est4.rb_grr3.disable
END

SCRIPT vn_on
BEGIN
 est4.vn_wv.enable
END

SCRIPT vn_off
BEGIN
 est4.vn_wv.disable
END

INCLUDE byifin
INCLUDE se
INCLUDE max_ml

PROGRAM command
BEGIN
 put /program by_output
 put "spregcs "
 varlist main.vn_yvar [main.vl_xvar]
 put " " /program ifin_output
 put /program se_prefix_output
 require main.fi_fn1
beginoptions
 optionarg main.fi_fn1
 optionarg main.cb_cmd1
 option radio(main rb_norm rb_exp rb_weib rb_hn rb_tn)
 optionarg main.vl_mhet
 optionarg main.vl_vhet
 optionarg main.vl_varq
 optionarg main.vl_aux
 optionarg main.vl_vary2
 optionarg main.vl_varz2
 option radio(main rb_lin rb_log)
 option radio(main rb_sprho rb_splam)
 option main.ck_tolog 
 option radio(est3 rb_ws1 rb_ws2 rb_ws3)
 option est1.ck_lmspac
 option est1.ck_lmhet
 option est1.ck_lmnorm
 option est1.ck_lmform
 option est1.ck_diag
 option est1.ck_hausman
 option est1.ck_lmiden 
 option est1.ck_reset
 option est1.ck_tests
 option est1.ck_lmcl
 option est1.ck_coll
 option est1.ck_first
 option est1.ck_robust
 option est1.ck_nocons
 option est1.ck_nocong
 option est1.ck_twostep
 option est1.ck_dn
 option radio(est2 rb_m1 rb_m2 rb_m3 rb_m4 rb_m5 rb_m6)
 optionarg est2.ed_fuller
 optionarg est2.ed_kclass
 option radio(est2 rb_g0 rb_g1 rb_g2 rb_g3 rb_g4 rb_g5 rb_g6 rb_g7 rb_g8 rb_g9)
 option radio(est2 rb_ols rb_mvreg rb_sure rb_2sls rb_3sls)
 option est3.ck_hetero
 option est3.ck_tobit
 optionarg est3.ed_grids
 optionarg est3.ed_impower
 optionarg est3.ed_llt
 optionarg est3.vn_predict
 optionarg est3.vn_resid
 optionarg est3.sp_inrho
 optionarg est3.sp_inlam
 optionarg est3.sp_ord
 optionarg est3.ed_rest
 optionarg est3.sp_nw
 optionarg est4.vn_wv
 option radio(est4 rb_w1 rb_w2 rb_w3 rb_w4 rb_w5 rb_w6 rb_w7 rb_w8)
 option radio(est4 rb_orr rb_grr1 rb_grr2 rb_grr3)
 optionarg est4.ed_ridge
 put " " /program se_output
 put " " /program max_output
endoptions
 END

