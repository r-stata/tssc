{smcl}
{hline}
{cmd:help parmhet_basic_opts}{right:(Roger Newson)}
{hline}


{title:Basic options for {helpb parmhet} and {helpb parmiv}}

{synoptset 28}
{synopthdr}
{synoptline}
{synopt:{cmd:by(}{varlist}{cmd:)}}Variables specifying by-groups{p_end}
{synopt:{opt ef:orm}}Estimates and confidence limits exponentiated{p_end}
{synopt:{opt float}}Numeric output variables of type {cmd:float} or less{p_end}
{synopt:{opt dfc:ombine(combination_rule)}}Rule for combining degrees of freedom{p_end}
{synopt:{opt ivw:eight}{cmd:(}{help newvar:{it:newvarname}}{cmd:)}}Name of generated inverse-variance weight variable{p_end}
{synopt:{opt sw:eight}{cmd:(}{help newvar:{it:newvarname}}{cmd:)}}Name of generated semi-weight variable{p_end}
{synopt:{opt sst:derr}{cmd:(}{help newvar:{it:newvarname}}{cmd:)}}Name of generated semi-weight-based standard error variable{p_end}
{synoptline}

{pstd}
where {it:combination_rule} is

{pstd}
{cmd:welch} | {cmd:constant}


{title:Description}

{pstd}
These options are used in a similar way by {helpb parmhet} and {helpb parmiv}.


{title:Options}


{p 4 8 2}
{cmd:by(}{varlist}{cmd:)} specifies a list of existing by-variables in the input dataset.
The heterogeneity-test statistics are computed within by-groups if {cmd:by()} is specified.
If {cmd:by()} is not specified, then the test statistics are computed for the whole input dataset.
The output dataset (or resultsset) created by {helpb parmhet}
has one observation per by-group, if {cmd:by()} is specified,
and only one observation otherwise.

{p 4 8 2}
{cmd:eform} indicates that the input estimates are exponentiated,
and that the input standard errors are multiplied by the exponentiated estimate.
{cmd:eform} is used when the user chooses to calculate heterogeneity-test statistics
for the logs of the input parameter estimates,
as is usual when the input parameters are odds ratios, risk ratios, or geometric mean ratios.
Otherwise, heterogeneity-test statistics are calculated for the input parameters themselves.

{p 4 8 2}
{cmd:float} specifies that the numeric output variables will be created as type {hi:float} or below.
If {cmd:float} is unset, then the numeric output variables are created as type {hi:double}.
Note that all generated variables are compressed as much as possible without loss of information,
whether or not {cmd:float} is specified.

{p 4 8 2}

{p 4 8 2}
{cmd:dfcombine(}{it:combination_rule}{cmd:)} specifies a rule for combining the degrees of freedom of the input parameters
to define the denominator degrees of freedom for the {it:F}-test statistic,
if a degrees of freedom variable is specified by the user.
If {cmd:dfcombine(welch)} is specified, then {helpb parmhet} and {helpb parmiv} use the formula of Welch (1951),
popularized by Cochrane (1954),
to calculate the {it:F}-statistic and its denominator degrees of freedom.
If {cmd:dfcombine(constant)} is specified,
then {helpb parmhet} and {helpb parmiv} check that the input degrees of freedom
are constant (or constant within by-groups if {cmd:by(}{it:{help varlist}}{cmd:)} is specified),
and then sets the denominator degrees of freedom to the constant input degrees of freedom,
and calculates the heterogeneity {it:F}-statistic by dividing the heterogeneity chi-squared statistic
by the heterogeneity degrees of freedom.
{cmd:dfcombine()} is set to {cmd:welch} by default,
but is ignored if a degrees of freedom variable is not specified.
The option {cmd:dfcombine(constant)} is useful if the input parameters are uncorrelated parameters
belonging to the same model estimation with pooled degrees of freedom,
such as group means estimated using the {helpb regress} command
with group membership indicators as {it:X}-variables,
using the {cmd:noconst} option,
and the user uses {helpb parmhet} or {helpb parmiv} to test for heterogeneity between groups.
In these circumstances, using {helpb regress} without the {cmd:robust} option
and using {cmd:dfcombine(constant)} with {helpb parmhet} or {helpb parmiv}
gives {it:P}-values equivalent to those of the equal-variance {it:F}-test.

{p 4 8 2}
{cmd:ivweight(}{help newvar:{it:newvarname}}{cmd:)} specifies the name of an output variable,
to be generated in the existing input dataset,
containing inverse-variance weights for the corresponding parameter estimates.
These inverse-variance weights can then be input as {help weight:aweights}
to the {helpb metaparm}, module of the {helpb parmest} package,
using the estimates, standard errors and degrees of freedom input to {helpb parmhet} or {helpb parmiv},
to output estimates, confidence intervals and {it:P}-values
for summary parameters generated by a fixed-effect meta-analysis.

{p 4 8 2}
{cmd:sweight(}{help newvar:{it:newvarname}}{cmd:)} specifies the name of an output variable,
to be generated in the existing input dataset,
containing semi-weights for the corresponding parameter estimates,
as described in Cochrane (1954).
These semi-weights can then be input as {help weight:aweights}
to the {helpb metaparm} module of the {helpb parmest} package,
using the estimates and degrees of freedom input to {helpb parmhet} or {helpb parmiv}
together with the standard errors generated using the {cmd:sstderr()} option,
to output estimates, confidence intervals and {it:P}-values
for summary parameters generated by a DerSimonian-Laird randomly-variable-effect meta-analysis,
as defined by DerSimonian and Laird (1986).

{p 4 8 2}
{cmd:sstderr(}{help newvar:{it:newvarname}}{cmd:)} specifies the name of an output variable,
to be generated in the existing input dataset,
containing semi-weight-based standard errors for the corresponding parameter estimates.
These standard errors are equal to the inverse square roots
of the semi-weights generated by the {cmd:sweight()} option.
If calculated,
they can be input as the {cmd:stderr()} option
to the {helpb metaparm} module of the {helpb parmest} package,
using the estimates and degrees of freedom input to {helpb parmhet} or {helpb parmiv},
together with {help weight:aweights} generated by the {helpb sweight()} option,
to output estimates, confidence intervals and {it:P}-values
for summary parameters generated by a DerSimonian-Laird randomly-variable-effect meta-analysis,
as defined by DerSimonian and Laird (1986).


{title:Author}

{pstd}
Roger Newson, National Heart and Lung Institute, Imperial College London, UK.
Email: {browse "mailto:r.newson@imperial.ac.uk":r.newson@imperial.ac.uk}


{title:References}

{phang}
Cochrane, W. G.  1954.  The combination of estimates from different experiments.
{it:Biometrics} 10(1): 101-129.

{phang}
DerSimonian, R. and Laird, N.  1986.  Meta-analysis in clinical trials.
{it:Controlled Clinical Trials} 7(3): 177-188.

{phang}
Welch, B. L.  1951.  On the comparison of several mean values: an alternative approach.
{it:Biometrika} 36(3/4): 330-336.


{title:Also see}

{p 4 13 2}
{bind: }Manual: {hi:[R] meta}, {hi:[R] test}
{p_end}
{p 4 13 2}
On-line: help for {helpb parmhet}, {helpb parmiv},
{help parmhet_resultsset_opts:{it:parmhet_resultsset_opts}},
{help parmhet_hettest_opts:{it:parmhet_hettest_opts}},
{help parmhet_resultsset:{it:parmhet_resultsset}}
{break} help for {helpb test}
{break} help for {helpb parmest}, {helpb parmby}, {helpb parmcip}, {helpb metaparm}, {helpb metan} if installed
{p_end}
